
@book{clements_documenting_2010,
	edition = {2nd revised edition.},
	title = {Documenting Software Architectures: Views and Beyond},
	isbn = {0321552687},
	shorttitle = {Documenting Software Architectures},
	publisher = {Addison Wesley},
	author = {Clements, Paul and Bachmann, Felix and Bass, Len and Garlan, David and Ivers, James and Little, Reed and Merson, Paulo and Nord, Robert L.},
	month = oct,
	year = {2010}
},

@book{peters2008getting,
  title={Getting Results from Software Development Teams},
  author={Peters, L.J.},
  isbn={9780735623460},
  lccn={2007928772},
  series={Best practices},
  url={http://books.google.com/books?id=ZPSIAAAACAAJ},
  year={2008},
  publisher={Microsoft Press}
}

@book{ament_single_2002,
	title = {Single Sourcing: Building Modular Documentation},
	isbn = {0815514913},
	shorttitle = {Single Sourcing},
	publisher = {Noyes Pubn},
	author = {Ament, Kurt},
	month = oct,
	year = {2002}
},

@book{kohl_global_2007,
	title = {The Global English Style Guide: Writing Clear, Translatable Documentation for a Global Market},
	isbn = {9781599946573},
	shorttitle = {The Global English Style Guide},
	publisher = {{SAS} Publishing},
	author = {Kohl, John},
	month = oct,
	year = {2007}
},

@book{lomax_documentation_1977,
	title = {Documentation of Software Products: Recommendations for Producers and Users},
	isbn = {0850121663},
	shorttitle = {Documentation of Software Products},
	publisher = {Blackwell},
	author = {Lomax, {J.D.}},
	month = may,
	year = {1977},
	annote = {just added this one because of its release date 1977 !
might be interesting to see what they thought about documentation back then}
},

@book{barker_writing_2002,
	edition = {0002},
	title = {Writing Software Documentation: A {Task-Oriented} Approach {(Part} of the Allyn \& Bacon Series in Technical Communication): A {Task-Oriented} Approach},
	isbn = {0321103289},
	shorttitle = {Writing Software Documentation},
	publisher = {Longman},
	author = {Barker, Thomas T.},
	month = oct,
	year = {2002},
	annote = {googlebook:
{http://books.google.com/books?id=pABRAAAAMAAJ\&q=software+documentation\&dq=software+documentation\&hl=en\&ei=agYoToKkCZKn8QPZseDzCg\&sa=X\&oi=book\_result\&ct=result\&resnum=2\&ved=0CDEQ6AEwAQ}

 

Part of the Allyn \& Bacon series in technical communication, Writing Software Documentation features a step-by-step strategy to writing and describing procedures. This task-oriented book is designed to support both college students taking a course and professionals working in the field. Teaching apparatus includes complete programs for students to work on and a full set of project tracking forms, as well as a broad range of examples including Windows-style pages and screens and award-winning examples from {STC} competitions.}
},

@book{_sphinx_????,
	title = {Sphinx},
	isbn = {6133203196},
	publisher = {Vdm Verlag Dr. Mller Ag \& Co. Kg}
},

@book{alchin2010pro,
  title={Pro Python},
  author={Alchin, M.},
  isbn={9781430227571},
  series={Apress Series},
  url={http://books.google.com/books?id=9GPPLVcHd5cC},
  year={2010},
  publisher={Apress}
},

@online{pep_8,
	urldate = {2011-07-03},
	title = {{PEP} 8 -- Style Guide for Python Code},
	url = {http://www.python.org/dev/peps/pep-0008/},
	author = {van Rossum, Guido and Warsaw, Barry},
	month = jun,
	year = {2011},
	howpublished = {http://www.python.org/dev/peps/pep-0008/}
},

@online{docutils_2011,
	urldate = {2011-08-23},
	title = {Docutils: Documentation Utilities},
	url = {http://docutils.sourceforge.net/},
	author = {w.a.},
	year = {2011},
	howpublished = {http://docutils.sourceforge.net/}
}

@online{sphinx_2011,
	urldate = {2011-08-22},
	title = {Sphinx v1.0.7 documentation},
	url = {http://sphinx.pocoo.org/},
	author = {Brandl, G.},
	year = {2011},
	howpublished = {http://sphinx.pocoo.org/}
},


@online{doxy_2011,
	urldate = {2011-08-22},
	title = {Doxygen Project Website},
	url = {http://www.stack.nl/~dimitri/doxygen/},
	author = {van Heesch, D.},
	year = {2011},
	howpublished = {http://www.stack.nl/~dimitri/doxygen/}
},


@online{ardis_et_al_2000,
	urldate = {2011-07-26},
	title = {Software product lines: a case study},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.117.3309&rep=rep1&type=pdf},
	author = {Ardis, M. and Daley, Nigel and Hoffman, Daniel and Siy, Harvey and Weiss, David},
	year = {2000}},

@online{_rfc_????,
	urldate = {2011-07-23},
	title = {{RFC} 3},
	url = {http://datatracker.ietf.org/doc/rfc3/},
	howpublished = {http://datatracker.ietf.org/doc/rfc3/}
},

@online{_rfc_????-1,
	title = {{RFC} 10},
	url = {http://datatracker.ietf.org/doc/rfc10/},
	howpublished = {http://datatracker.ietf.org/doc/rfc10/}
},

@online{_rfc_????-2,
	title = {{RFC} 24},
	url = {http://datatracker.ietf.org/doc/rfc24/},
	howpublished = {http://datatracker.ietf.org/doc/rfc24/}
},

@online{_rfc_????-3,
	title = {{RFC} 27},
	url = {http://datatracker.ietf.org/doc/rfc27/},
	howpublished = {http://datatracker.ietf.org/doc/rfc27/}
},

@online{_rfc_????-4,
	title = {{RFC} 30},
	url = {http://datatracker.ietf.org/doc/rfc30/},
	howpublished = {http://datatracker.ietf.org/doc/rfc30/}
},

@online{_software_????,
	title = {Software documentation - Wikipedia, the free encyclopedia},
	url = {https://secure.wikimedia.org/wikipedia/en/wiki/Software_documentation},
	howpublished = {{https://secure.wikimedia.org/wikipedia/en/wiki/Software\_documentation}},
	annote = {informational only, dont use as a reference {:D}}
},

@book{roetzheim_old-school_2007,
	title = {{Old-School} Software Development: Lessons from a Software Survivor},
	isbn = {9781933769257},
	shorttitle = {{Old-School} Software Development},
	publisher = {{Level4Press} Inc},
	author = {Roetzheim, William},
	month = feb,
	year = {2007}
},

@book{seffah2011human,
  title={Human-Centered Software Engineering - Integrating Usability in the Software Development Lifecycle},
  author={Seffah, A. and Gulliksen, J. and Desmarais, M.C.},
  isbn={9789048170166},
  series={Humancomputer Interaction Series},
  url={http://books.google.com/books?id=8aBgcgAACAAJ},
  year={2011},
  publisher={Springer}
},

@inproceedings{huang_towards_2003,
	address = {New York, {NY}, {USA}},
	series = {{SIGDOC} '03},
	title = {Towards a documentation maturity model},
	isbn = {{1-58113-696-X}},
	location = {San Francisco, {CA}, {USA}},
	doi = {10.1145/944868.944888},
	abstract = {This paper presents preliminary work towards a maturity model for system documentation. The Documentation Maturity Model {(DMM)} is specifically targeted towards assessing the quality of documentation used in aiding program understanding. Software engineers and technical writers produce such documentation during regular product development lifecycles. The documentation can also be recreated after the fact via reverse engineering. The {DMM} has both process and product components; this paper focuses on the product quality aspects.},
	booktitle = {Proceedings of the 21st annual international conference on Documentation},
	publisher = {{ACM}},
	author = {Huang, S. and Tilley, S.},
	year = {2003},
	note = {{ACM} {ID:} 944888},
	keywords = {documentation},
	pages = {93–99}
},

@inproceedings{de_souza_study_2005,
	address = {New York, {NY}, {USA}},
	series = {{SIGDOC} '05},
	title = {A study of the documentation essential to software maintenance},
	isbn = {1-59593-175-9},
	location = {Coventry, United Kingdom},
	doi = {10.1145/1085313.1085331},
	abstract = {Software engineering has been striving for years to improve the practice of software development and maintenance. Documentation has long been prominent on the list of recommended practices to improve development and help maintenance. Recently however, agile methods started to shake this view, arguing that the goal of the game is to produce software and that documentation is only useful as long as it helps to reach this {goal.On} the other hand, in the re-engineering field, people wish they could re-document useful legacy software so that they may continue maintain them or migrate them to new {platform.In} these two case, a crucial question arises: {"How} much documentation is enough?" In this article, we present the results of a survey of software maintainers to try to establish what documentation artifacts are the most useful to them.},
	booktitle = {Proceedings of the 23rd annual international conference on Design of communication: documenting \& designing for pervasive information},
	publisher = {{ACM}},
	author = {de Souza, S. and Anquetil, N. and de Oliveira, K.},
	year = {2005},
	note = {{ACM} {ID:} 1085331},
	keywords = {documentation, empirical study, general},
	pages = {68–75}
},

@inproceedings{forward_relevance_2002,
	address = {New York, {NY}, {USA}},
	series = {{DocEng} '02},
	title = {The relevance of software documentation, tools and technologies: a survey},
	isbn = {1-58113-594-7},
	location = {{McLean}, Virginia, {USA}},
	shorttitle = {The relevance of software documentation, tools and technologies},
	doi = {10.1145/585058.585065},
	abstract = {This paper highlights the results of a survey of software professionals. One of the goals of this survey was to uncover the perceived relevance (or lack thereof) of software documentation, and the tools and technologies used to maintain, verify and validate such documents. The survey results highlight the preferences for and aversions against software documentation tools. Participants agree that documentation tools should seek to better extract knowledge from core resources. These resources include the system's source code, test code and changes to both. Resulting technologies could then help reduce the effort required for documentation maintenance, something that is shown to rarely occur. Our data reports compelling evidence that software professionals value technologies that improve automation of the documentation process, as well as facilitating its maintenance.},
	booktitle = {Proceedings of the 2002 {ACM} symposium on Document engineering},
	publisher = {{ACM}},
	author = {Forward, A. and Lethbridge, T. C.},
	year = {2002},
	note = {{ACM} {ID:} 585065},
	keywords = {documentation, documentation relevance},
	pages = {26–33}
},

@inproceedings{tilley_qualitative_2003,
	address = {New York, {NY}, {USA}},
	series = {{SIGDOC} '03},
	title = {A qualitative assessment of the efficacy of {UML} diagrams as a form of graphical documentation in aiding program understanding},
	isbn = {{1-58113-696-X}},
	location = {San Francisco, {CA}, {USA}},
	doi = {10.1145/944868.944908},
	abstract = {Graphical documentation is often characterized as an effective aid in program understanding. However, it is an open question exactly which types of graphical documentation are most suitable for which types of program understanding tasks (and in which specific usage contexts). The Unified Modeling Language {(UML)} is the de facto standard for modeling modern software applications. This paper describes an experiment to assess the qualitative efficacy of {UML} diagrams in aiding program understanding. The experiment had participants analyze a series of {UML} diagrams and answer a detailed questionnaire concerning a hypothetical software system. Results from the experiment suggest that the {UML's} efficacy in support of program understanding is limited by factors such as ill-defined syntax and semantics, spatial layout, and domain knowledge.},
	booktitle = {Proceedings of the 21st annual international conference on Documentation},
	publisher = {{ACM}},
	author = {Tilley, S. and Huang, S.},
	year = {2003},
	note = {{ACM} {ID:} 944908},
	keywords = {assessment, design tools and techniques, documentation},
	pages = {184–191}
},

@inproceedings{tilley_1992,
	address = {New York, {NY}, {USA}},
	series = {{CASCON} '92},
	title = {Documenting-in-the-large vs. documenting-in-the-small
},
	isbn = {{1-58113-696-X}},
	location = {San Francisco, {CA}, {USA}},
	booktitle = {Proceedings of CASCON’93},
	publisher = {IBM Centre for Advanced Studies},
	author = {Tilley, S.},
	year = {1993},
	pages = {1083–90}
},

@inproceedings{cioch_96,
	address = {New York, {NY}, {USA}},
	series = {{ICSM} '96},
	title = {A documentation suite for maintenance programmers},
	location = {San Francisco, {CA}, {USA}},
	booktitle = {Proceedings of the 1996 International Conference on Software Maintenance},
	publisher = {IEEE},
	author = {Cioch, F. A. and Palazzolo, M.},
	year = {1996},
	pages = {286–95}
},

@book{grubb2003software,
  title={Software maintenance: concepts and practice},
  author={Grubb, P. and Takang, A. A.},
  isbn={9789812384263},
  lccn={2005297903},
  url={http://books.google.com/books?id=7vrctiaX-aUC},
  year={2003},
  publisher={World Scientific}
}

@inproceedings{correia_patterns_2010,
	address = {New York, {NY}, {USA}},
	series = {{PLoP} '09},
	title = {Patterns for consistent software documentation},
	isbn = {978-1-60558-873-5},
	location = {Chicago, Illinois},
	doi = {10.1145/1943226.1943241},
	abstract = {Documentation is an important part of the captured knowledge of a software project, providing a flexible and effective way of recording informal contents. However, maintaining documentation's consistency requires a considerable effort. Existing solutions encompass different tools and approaches that support the process of creating, evolving and using documents and other artifacts derived from the software development process. Based on existing literature and expertise, we have identified the key problems and solutions for documentation consistency. In concrete, four distinct patterns and their relations were identified, which are here described --- Information Proximity, {Co-Evolution}, {Domain-Structured} Information and Integrated Environment.},
	booktitle = {Proceedings of the 16th Conference on Pattern Languages of Programs},
	publisher = {{ACM}},
	author = {Correia, Filipe Figueiredo and Aguiar, Ademar and Ferreira, Hugo Sereno and Flores, Nuno},
	year = {2010},
	note = {{ACM} {ID:} 1943241},
	keywords = {documentation, patterns},
	pages = {12:1–12:7}
},

@inproceedings{magyar_automating_2000,
	address = {Piscataway, {NJ}, {USA}},
	series = {{IPCC/SIGDOC} '00},
	title = {Automating software documentation: a case study},
	isbn = {0-7803-6431-7},
	location = {Cambridge, Massachusetts},
	shorttitle = {Automating software documentation},
	url = {http://portal.acm.org/citation.cfm?id=504800.504879},
	abstract = {Spatial Technology, Inc., has 45-60 developers (depending on how you count) busy writing code. The Tech Pubs department has three writers to keep up with them, plus two programmers who develop and maintain software tools that support the documentation. This team puts out paper and online documentation, on time, reasonably complete, for one major and several minor releases a year. It's the tools that make it {possible.I} will first describe the tools and processes in place when I started at Spatial, explain the issues that led us to change them, and discuss the changes that we put in place both for tools and process. I will also discuss some of the problems we faced and how we dealt with them. In the presentation, I will report on the current state of the transition, and explore how this specific case study could be a useful model for dealing with complex software documentation projects.},
	booktitle = {Proceedings of {IEEE} professional communication society international professional communication conference and Proceedings of the 18th annual {ACM} international conference on Computer documentation: technology \& teamwork},
	publisher = {{IEEE} Educational Activities Department},
	author = {Magyar, Miki},
	year = {2000},
	note = {{ACM} {ID:} 504879},
	pages = {549–558}
},

@inproceedings{mackinnon_designing_2004,
	address = {New York, {NY}, {USA}},
	series = {{SIGDOC} '04},
	title = {Designing {UML} diagrams for technical documentation: continuing the collaborative approach to publishing class diagrams},
	isbn = {1-58113-809-1},
	location = {Memphis, Tennessee, {USA}},
	shorttitle = {Designing {UML} diagrams for technical documentation},
	doi = {10.1145/1026533.1026565},
	abstract = {This paper provides an updated discussion of the authors' ongoing efforts in developing a design framework for {UML} diagrams in technical documentation. {UML} diagrams are a key part of program design. They can enhance understanding of complex programming concepts, and assist in problem analysis and solution design. In a previous paper, {"Designing} {UML} diagrams for technical documentation" [1], the authors presented a collaborative process that applies established design principles to {UML} diagrams, improving diagram presentation and shrinking publication costs and schedules. This paper expands on that work, showing how the established process can now be applied to several different modeling tools, including {IBM} Rational® {XDE} and Microsoft Visio. It also provides a detailed description of how to export modeling files to other file formats. The authors show how their process workflow has evolved over the past year as it has been applied by developers, writers, and graphic designers at {IBM's} Toronto Software Laboratory, and discuss ways in which they will continue to monitor and improve the efficacy of both the process and resulting diagrams.},
	booktitle = {Proceedings of the 22nd annual international conference on Design of communication: The engineering of quality documentation},
	publisher = {{ACM}},
	author = {{MacKinnon}, Neil and Murphy, Steve},
	year = {2004},
	note = {{ACM} {ID:} 1026565},
	keywords = {design, documentation},
	pages = {120–127}
},

@inproceedings{dagenais_creating_2010,
	address = {New York, {NY}, {USA}},
	series = {{FSE} '10},
	title = {Creating and evolving developer documentation: understanding the decisions of open source contributors},
	isbn = {978-1-60558-791-2},
	location = {Santa Fe, New Mexico, {USA}},
	shorttitle = {Creating and evolving developer documentation},
	doi = {10.1145/1882291.1882312},
	abstract = {Developer documentation helps developers learn frameworks and libraries. To better understand how documentation in open source projects is created and maintained, we performed a qualitative study in which we interviewed core contributors who wrote developer documentation and developers who read documentation. In addition, we studied the evolution of 19 documents by analyzing more than 1500 document revisions. We identified the decisions that contributors make, the factors influencing these decisions and the consequences for the project. Among many findings, we observed how working on the documentation could improve the code quality and how constant interaction with the projects' community positively impacted the documentation.},
	booktitle = {Proceedings of the eighteenth {ACM} {SIGSOFT} international symposium on Foundations of software engineering},
	publisher = {{ACM}},
	author = {Dagenais, Barthélémy and Robillard, Martin P},
	year = {2010},
	note = {{ACM} {ID:} 1882312},
	keywords = {developer documentation, documentation},
	pages = {127–136}
},

@inproceedings{bist_sequence_2004,
	address = {New York, {NY}, {USA}},
	series = {{SIGDOC} '04},
	title = {Sequence diagram presentation in technical documentation},
	isbn = {1-58113-809-1},
	location = {Memphis, Tennessee, {USA}},
	doi = {10.1145/1026533.1026566},
	abstract = {A sequence diagram shows a series of events that occurs within a particular system. A sequence diagram can be extremely useful for design and analysis, since it shows logic flow visually. However, because even a simple programming sequence can stretch far beyond the confines of a single screen or printed page, authors of technical material must be able to identify and apply a set of best practices. The set of practices developed for the {IBM} Toronto Software Laboratory enables authors to reasonably present such diagrams within the limited confines of the publishing medium. Building on the work presented in the article {"Designing} {UML} diagrams for technical documentation" [1], this paper discusses an approach for dealing with the particular challenges of presenting sequence diagrams in technical documentation.},
	booktitle = {Proceedings of the 22nd annual international conference on Design of communication: The engineering of quality documentation},
	publisher = {{ACM}},
	author = {Bist, Gary and {MacKinnon}, Neil and Murphy, Steve},
	year = {2004},
	note = {{ACM} {ID:} 1026566},
	keywords = {design, documentation},
	pages = {128–133}
},

@book{hargis_developing_2004,
	title = {Developing quality technical information: a handbook for writers and editors},
	isbn = {9780131477490},
	shorttitle = {Developing quality technical information},
	publisher = {Prentice Hall {PTR}},
	author = {Hargis, Gretchen},
	year = {2004},
	annote = {referenced in towards a documentation maturity model}
},

@book{_producing_1984,
	title = {Producing quality technical information},
	publisher = {{IBM} Corp.},
	year = {1984}
},

@book{pigoski_practical_1997,
	title = {Practical software maintenance: best practices for managing your software investment},
	isbn = {9780471170013},
	shorttitle = {Practical software maintenance},
	publisher = {Wiley Computer Pub.},
	author = {Pigoski, T. M.},
	year = {1997}
},

@book{rueping_agile_2003,
	title = {Agile documentation: a pattern guide to producing lightweight documents for software projects},
	isbn = {9780470856178},
	shorttitle = {Agile documentation},
	publisher = {John Wiley and Sons},
	author = {Rüping, Andreas},
	month = aug,
	year = {2003}
},

@online{iso_-_international_organization_for_standardization_iso_????,
	urldate = {2010-07-23},
	type = {Text},
	title = {{ISO} - International Organization for Standardization},
	copyright = {Copyright {ISO} - International Organization for Standardization. All rights reserved.},
	url = {http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=30804},
	author = {{ISO} - International Organization for Standardization and {ISO} - International Organization for Standardization},
	howpublished = {http://www.iso.org/iso/iso\_catalogue/catalogue\_tc/catalogue\_detail.htm?csnumber=30804}
},

@online{beck_manifesto_2001,
	urldate = {2010-07-13},
	title = {Manifesto for Agile Software Development},
	url = {http://agilemanifesto.org/},
	author = {Beck, Kent and Beedle, Mike and Fowler, Martin and Kern, Jon},
	year = {2001},
	howpublished = {http://agilemanifesto.org/}
},

@book{dingsyr_agile_2010,
	edition = {1st Edition.},
	title = {Agile Software Development: Current Research and Future Directions},
	isbn = {3642125743},
	shorttitle = {Agile Software Development},
	publisher = {Springer},
	author = {Dingsøyr, Torgeir and Dybå, Tore and Moe, Nils Brede},
	month = jun,
	year = {2010}
},

@book{collins-sussman_version_2008,
	title = {Version control with subversion},
	isbn = {9780596004484},
	publisher = {{O'Reilly}},
	author = {Collins-Sussman, B.},
	year = {2008},
	annote = {online version

http://svnbook.red-bean.com/

pdf version

http://svnbook.red-bean.com/en/1.5/svn-book.pdf

 },
	annote = {usage

when describing the implementation just use the recommended structure}
},

@online{pep_374,
	title = {{PEP} 374 -- Choosing a distributed {VCS} for the Python project},
	url = {http://www.python.org/dev/peps/pep-0374/},
	urldate = {2010-07-23},
	year = 2010,
	author = {Cannon, B. and Turnbull, Stephen J. and Vassalotti, Alexandre and Warsaw, Barry},
	howpublished = {http://www.python.org/dev/peps/pep-0374/},
}
